/**
 * Malware Detection JavaScript
 */

(function($) {
    'use strict';

    // Store scan interval ID
    let scanProgressInterval = null;
    
    // Make sure ajaxurl is defined
    if (typeof ajaxurl === 'undefined') {
        console.error('ajaxurl is not defined. Using kura_ai_malware.ajax_url instead.');
        var ajaxurl = kura_ai_malware.ajax_url;
    }

    /**
     * Initialize malware detection functionality
     */
    function initMalwareDetection() {
        console.log('Initializing malware detection...');
        
        // Initialize range input display
        updateThresholdDisplay();
        $('#ai_threshold').on('input', updateThresholdDisplay);

        // Initialize scan controls
        $('#start-malware-scan').on('click', startMalwareScan);
        // Use event delegation for the cancel button since it might be added dynamically
        $(document).on('click', '#cancel-malware-scan', cancelMalwareScan);

        // Initialize threat actions
        $('.view-details').on('click', showThreatDetails);
        $('.quarantine-file').on('click', quarantineFile);

        // Initialize modal
        $('.close-modal').on('click', closeModal);
        $(window).on('click', function(event) {
            if ($(event.target).hasClass('kura-ai-modal')) {
                closeModal();
            }
        });
        
        console.log('Malware detection initialized.');
    }

    /**
     * Update threshold display value
     */
    function updateThresholdDisplay() {
        const value = $('#ai_threshold').val();
        $('.threshold-value').text(value);
    }

    /**
     * Start malware scan
     */
    function startMalwareScan() {
        const $button = $(this);
        $button.prop('disabled', true);

        // Show loading state
        const $scanControl = $('.kura-ai-scan-control');
        $scanControl.find('.scan-status').html(`
            <div class="scan-progress">
                <div class="progress-bar">
                    <div class="progress" style="width: 0%"></div>
                </div>
                <p class="description">${kura_ai_malware.scanning_message}</p>
            </div>
        `);

        // Add cancel button
        $scanControl.find('.scan-actions').append(`
            <button type="button" id="cancel-malware-scan" class="button button-secondary">
                ${kura_ai_malware.cancel_scan}
            </button>
        `);

        // Start the scan
        $.ajax({
            url: ajaxurl,
            type: 'POST',
            data: {
                action: 'kura_ai_start_malware_scan',
                nonce: kura_ai_malware.nonce
            },
            success: function(response) {
                if (response.success) {
                    // Start progress polling
                    startProgressPolling();
                } else {
                    handleScanError(response.data.message);
                }
            },
            error: function() {
                handleScanError(kura_ai_malware.error_message);
            }
        });
    }

    /**
     * Start polling for scan progress
     */
    function startProgressPolling() {
        scanProgressInterval = setInterval(function() {
            $.ajax({
                url: ajaxurl,
                type: 'POST',
                data: {
                    action: 'kura_ai_get_scan_progress',
                    nonce: kura_ai_malware.nonce
                },
                success: function(response) {
                    if (response.success) {
                        updateScanProgress(response.data);

                        if (response.data.status === 'completed' || response.data.status === 'failed') {
                            stopProgressPolling();
                            refreshPage();
                        }
                    }
                }
            });
        }, 2000);
    }

    /**
     * Update scan progress display
     */
    function updateScanProgress(data) {
        const progress = (data.files_scanned / data.total_files) * 100;
        $('.progress').css('width', progress + '%');
        $('.scan-progress .description').text(
            kura_ai_malware.scanning_progress
                .replace('%d', data.files_scanned)
                .replace('%d', data.total_files)
        );
    }

    /**
     * Stop progress polling
     */
    function stopProgressPolling() {
        if (scanProgressInterval) {
            clearInterval(scanProgressInterval);
            scanProgressInterval = null;
        }
    }

    /**
     * Cancel ongoing scan
     */
    function cancelMalwareScan() {
        $.ajax({
            url: ajaxurl,
            type: 'POST',
            data: {
                action: 'kura_ai_cancel_scan',
                nonce: kura_ai_malware.nonce
            },
            success: function(response) {
                if (response.success) {
                    stopProgressPolling();
                    refreshPage();
                }
            }
        });
    }

    /**
     * Show threat details in modal
     */
    function showThreatDetails() {
        const threat = $(this).data('threat');
        const $modal = $('#threat-details-modal');
        const $content = $modal.find('.threat-details-content');

        // Format threat details
        let detailsHtml = `
            <div class="threat-detail-section">
                <h3>${kura_ai_malware.file_information}</h3>
                <table class="widefat">
                    <tr>
                        <th>${kura_ai_malware.file_path}</th>
                        <td>${threat.file}</td>
                    </tr>
                    <tr>
                        <th>${kura_ai_malware.severity}</th>
                        <td>
                            <span class="severity-badge severity-${threat.severity.toLowerCase()}">
                                ${threat.severity}
                            </span>
                        </td>
                    </tr>
                    <tr>
                        <th>${kura_ai_malware.ai_confidence}</th>
                        <td>${(threat.ai_confidence * 100).toFixed(1)}%</td>
                    </tr>
                    <tr>
                        <th>${kura_ai_malware.detection_time}</th>
                        <td>${threat.detection_time}</td>
                    </tr>
                </table>
            </div>
        `;

        if (threat.patterns && threat.patterns.length > 0) {
            detailsHtml += `
                <div class="threat-detail-section">
                    <h3>${kura_ai_malware.detected_patterns}</h3>
                    <table class="widefat">
                        <thead>
                            <tr>
                                <th>${kura_ai_malware.pattern_name}</th>
                                <th>${kura_ai_malware.pattern_type}</th>
                                <th>${kura_ai_malware.severity}</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${threat.patterns.map(pattern => `
                                <tr>
                                    <td>${pattern.pattern_name}</td>
                                    <td>${pattern.pattern_type}</td>
                                    <td>
                                        <span class="severity-badge severity-${pattern.severity.toLowerCase()}">
                                            ${pattern.severity}
                                        </span>
                                    </td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
            `;
        }

        if (threat.ai_explanation) {
            detailsHtml += `
                <div class="threat-detail-section">
                    <h3>${kura_ai_malware.ai_analysis}</h3>
                    <div class="ai-explanation">
                        ${threat.ai_explanation.replace(/\n/g, '<br>')}
                    </div>
                </div>
            `;
        }

        $content.html(detailsHtml);
        $modal.show();
    }

    /**
     * Quarantine malicious file
     */
    function quarantineFile() {
        const $button = $(this);
        const filePath = $button.data('file');

        if (confirm(kura_ai_malware.confirm_quarantine)) {
            $button.prop('disabled', true);

            $.ajax({
                url: ajaxurl,
                type: 'POST',
                data: {
                    action: 'kura_ai_quarantine_file',
                    nonce: kura_ai_malware.nonce,
                    file: filePath
                },
                success: function(response) {
                    if (response.success) {
                        refreshPage();
                    } else {
                        alert(response.data.message || kura_ai_malware.error_message);
                        $button.prop('disabled', false);
                    }
                },
                error: function() {
                    alert(kura_ai_malware.error_message);
                    $button.prop('disabled', false);
                }
            });
        }
    }

    /**
     * Close modal
     */
    function closeModal() {
        $('#threat-details-modal').hide();
    }

    /**
     * Handle scan error
     */
    function handleScanError(message) {
        stopProgressPolling();
        alert(message);
        refreshPage();
    }

    /**
     * Refresh page
     */
    function refreshPage() {
        window.location.reload();
    }

    // Initialize when document is ready
    $(document).ready(function() {
        console.log('Document ready, initializing malware detection...');
        initMalwareDetection();
    });

})(jQuery);